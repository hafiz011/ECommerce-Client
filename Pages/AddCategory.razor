@page "/AddCategory"
@using Ecommerce.Client.Models
@inject Ecommerce.Client.Services.CategoryService CategoryService
@inject IJSRuntime js

<EditForm Model="@category" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label fw-bold">Category Name</label>
        <InputText class="form-control" @bind-Value="category.Name" />
        <ValidationMessage For="@(() => category.Name)" />
    </div>

    <div class="mb-3">
        <label class="form-label fw-bold">Description</label>
        <InputTextArea class="form-control" @bind-Value="category.Description" />
        <ValidationMessage For="@(() => category.Description)" />
    </div>

    <div class="mb-3">
        <label class="form-label fw-bold">Upload Image</label>
        <InputFile OnChange="HandleFileChange" />
        @if (!string.IsNullOrEmpty(previewImage))
        {
            <img src="@previewImage" width="150" class="mt-2 border rounded" alt="Preview" />
        }
    </div>

    <button type="submit" class="btn btn-primary">Add Category</button>
</EditForm>

@code {
    private CategoryDto category = new();
    private IBrowserFile? selectedFile;
    private string? previewImage;

    private async Task HandleFileChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        using var stream = selectedFile.OpenReadStream(524288);
        var buffer = new byte[selectedFile.Size];
        await stream.ReadAsync(buffer);
        previewImage = $"data:{selectedFile.ContentType};base64,{Convert.ToBase64String(buffer)}";
    }

    private async Task HandleSubmit()
    {
        if (selectedFile == null)
        {
            await js.InvokeVoidAsync("alert", "Please select an image first!");
            return;
        }

        var result = await CategoryService.AddCategory(category.Name!, category.Description!, selectedFile);

        if (result != null)
        {
            await js.InvokeVoidAsync("alert", "Category added successfully!");
            category = new();
            previewImage = null;
            selectedFile = null;
            // Optionally navigate to /Categories
            // await js.InvokeVoidAsync("window.location.href", "/Categories");
        }
        else
        {
            await js.InvokeVoidAsync("alert", "Failed to add category!");
        }
    }
}