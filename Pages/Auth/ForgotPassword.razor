@page "/forgot-password"
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-sm p-4" style="max-width: 450px; width: 100%;">
        <div class="card-body">
            <h3 class="card-title text-center mb-4">Forgot Password</h3>

            <EditForm Model="@model" OnValidSubmit="Submit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <InputText @bind-Value="model.Email" placeholder="Enter your email" class="form-control" />
                </div>

                <button class="btn btn-primary w-100" type="submit" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        <p>Sending</p>
                    }
                    else
                    {
                        <p>Send Reset Link</p>
                    }
                </button>
            </EditForm>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert @alertClass mt-3" role="alert">
                    @message
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ForgotPasswordModel model = new();
    private string message;
    private bool isLoading = false;
    private string alertClass = "alert-info";

    private async Task Submit()
    {
        isLoading = true;
        message = null;

        try
        {
            var response = await Http.PostAsJsonAsync("auth/forgot-password", model);
            var result = await response.Content.ReadFromJsonAsync<ApiResponse>();

            message = result?.Message ?? "If your email exists, a reset link has been sent.";
            alertClass = response.IsSuccessStatusCode ? "alert-success" : "alert-danger";
        }
        catch (Exception ex)
        {
            message = ex.Message;
            alertClass = "alert-danger";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class ForgotPasswordModel
    {
        public string Email { get; set; }
    }

    public class ApiResponse
    {
        public string Message { get; set; }
    }
}
